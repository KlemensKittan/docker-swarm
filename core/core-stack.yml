version: "3.9"

services:
  traefik:
    image: traefik:latest
    env_file:
      - .env
    networks:
      - traefik
    ports:
      # Use host mode for network ports for ip whitelisting
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ./traefik/static.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic.yml:/etc/traefik/dynamic/dynamic.yml
      - ./traefik/acme.json:/etc/traefik/acme/acme.json
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
      labels:
        - "com.centurylinklabs.watchtower.enable=true"
        # Enable traefik for that service
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=HostRegexp(`{host:.*\\.sub\\.domain\\.toplevel}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
        - "traefik.http.routers.traefik.entrypoints=https"
        - "traefik.http.routers.traefik.service=api@internal"
        # Required by swarm but not used
        - "traefik.http.services.traefik.loadbalancer.server.port=8888"
        # Use these middlewares
        - "traefik.http.routers.traefik.middlewares=core-auth@file,core-ipwhitelist@file,traefik-redirect"
        # Add missing slash at the end
        - "traefik.http.middlewares.traefik-redirect.redirectregex.regex=(^.*\\/dashboard$$)"
        - "traefik.http.middlewares.traefik-redirect.redirectregex.replacement=$${1}/"
        - "traefik.http.middlewares.traefik-redirect.redirectregex.permanent=true"

  portainer:
    image: portainer/portainer
    command: --admin-password "$$2y$$05$$xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "com.centurylinklabs.watchtower.enable=true"
        # Enable traefik for that service
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=HostRegexp(`{host:.*\\.sub\\.domain\\.toplevel}`) && PathPrefix(`/portainer`)"
        - "traefik.http.routers.portainer.entrypoints=https"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        # Use these middlewares
        - "traefik.http.routers.portainer.middlewares=core-ipwhitelist@file,portainer-redirect,portainer-stripprefix"
        # Specific middleware rule for this service
        - "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"
        # Add missing slash at the end
        - "traefik.http.middlewares.portainer-redirect.redirectregex.regex=(^.*\\/portainer$$)"
        - "traefik.http.middlewares.portainer-redirect.redirectregex.replacement=$${1}/"
        - "traefik.http.middlewares.portainer-redirect.redirectregex.permanent=true"

  watchtower:
    image: containrrr/watchtower
    command: --cleanup --label-enable
    networks:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./watchtower/config.json:/config.json
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "com.centurylinklabs.watchtower.enable=true"

networks:
  traefik:
    name: traefik
    external: true
